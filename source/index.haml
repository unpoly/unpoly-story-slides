!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %title Unpoly: Review 2017, Preview 2018
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %meta{:content => "black-translucent", :name => "apple-mobile-web-app-status-bar-style"}/
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui", :name => "viewport"}/
    %link{:href => "css/reveal.css", :rel => "stylesheet"}/
    %link#theme{:href => "css/theme/blood.css", :rel => "stylesheet"}/
    %link{:href => "css/custom.css", :rel => "stylesheet"}/
    / Code syntax highlighting
    %link{:href => "lib/css/highlightjs/paraiso-dark.css", :rel => "stylesheet"}/

    %link{ :href => 'pictures/favicon.png', :rel => 'icon' }
    / Printing and PDF exports
    :javascript
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    /[if lt IE 9]
      <script src="lib/js/html5shiv.js"></script>
  %body
    .reveal
      / Any section element inside of this container is displayed as a slide
      .slides

        %section

          %h2
            %img.plain(src='pictures/logos/unpoly.png' width='50%')

          %h3
            Review <span class="blue">2017</span>
            %br
            Roadmap <span class="blue">2018</span>

        %section
          %h2 2017

          %ul
            %li Drop support for IE9, IE10
            %li jQuery 3
            %li Webpack + npm
            %li Native AJAX
            %li Native promises
            %li.fragment.orange
              Infinite bug fixes

        %section
          %img(src='pictures/diffs_without_unpoly.png' height=600)

          %p.center.s
            Diff sizes of <code>lib</code> and tests (excluding renamed files)

        %section
          %img(src='pictures/diffs_with_unpoly.png' height=600)

          %p.center.s
            Diff sizes of <code>lib</code> and tests (excluding renamed files)


        %section
          %h2 2017

          %ul
            %li Drop support for IE9, IE10
            %li jQuery 3
            %li Webpack + npm
            %li Native AJAX
            %li Native promises
            %li.fragment.orange
              Infinite bug fixes


        %section
          %h2
            .subtle
              2017
            .line
              Unpoly 0.50

        %section
          %h2
            .subtle
              2018
            .line
              Unpoly 1.0.0

        %section
          %h2
            .subtle
              2018
            .line
              Unpoly 2.0.0

        %section
          %h2
            .subtle
              2018
            .line
              Unpoly 3.0.0


        %section
          %p
            Unpoly stayed on 0.x for 3 years because of semantic versioning

        %section
          %h2
            .subtle
              Sidebar
            .line
              Semantic versioning

          %p
            Major version zero (0.y.z) is for initial development.
            %br
            %b Anything may change at any time.
            %br
            The public API should not be considered stable.

          %p
            %b Version 1.0.0 defines the public API.
            The way in which the version number is incremented after this release is dependent on this public API and how it changes.

          %p
            Given a version number <code>MAJOR.MINOR.PATCH</code>, increment the:

          %ol
            %li <code>MAJOR</code> version when you make incompatible API changes,
            %li <code>MINOR</code> version when you add functionality in a backwards-compatible manner,
            %li <code>PATCH</code> version when you make backwards-compatible bug fixes.

        %section

          %p
            So Unpoly stayed on 0.x in hope that the API would stabilize 100%
          %p.fragment
            That never happened
          %p.fragment
            (and that's OK)


        %section
          %h2
            .subtle In 2018 Unpoly will
            .line switch to frequent major releases

          %ul

            %li.fragment
              It's stupid to stay on 0.x forever in fear of breaking changes
              .subtle
                There is <b>zero signal</b> in an Unpoly version number right now

            %li.fragment
              After 1.0 there will be a major version bump every few months
              .subtle
                Use this to know if you can upgrade without reading CHANGELOG
            %li.fragment
              Major bumps will not mean "huge breaking change" like in Rails
              .subtle
                It means: <i>Any</i> breaking change
                %br
                It means: You should read CHANGELOG or run tests
            %li.fragment
              There's still a commitment to not break your app for petty reasons
              .subtle
                There will always be deprecations and clearly documented upgrade paths
                %br
                Like we had for three years now


        %section

          %h2
            .subtle
              Roadmap
            .line
              Quality of live improvements

          %ul
            %li <code>input[up-preview]</code>
            %li Better handling of URL <code>#hashes</code>
            %li Rich events
            %li Mailing list

        %section

          %h2
            .subtle
              Roadmap
            .line
              Zeroconf offline

          %p.fragment
            (This might not work)


        %section
          %p
            Unpoly wants to emulate a browser that is friendly to apps, not documents

          %p.fragment.red
            Browsers don't work well when internet goes away

        -#%section
        -#
        -#  %h3
        -#    The idea behind Unpoly
        -#
        -#  %img.right(src='pictures/html6.png' height=200 style='margin-right: 120px')
        -#
        -#  %ul
        -#    %li
        -#      Emulate a browser that is friendly to apps, not documents
        -#    %li
        -#      Write less JavaScript


        -#%section
        -#  %img(src='pictures/trade_off.png' height=600)

        %section
          %img(src='pictures/cards_online.png' height=600)

        %section
          %img(src='pictures/cards_native_offline.png' height=600)

        %section
          %p.red
            It's not cool to burn down application state
            when connection is lost.

          %p
            Can we do better?

        %section
          %img(src='pictures/cards_online.png' height=600)

        %section
          %img(src='pictures/cards_unpoly_offline_toast.png' height=600)

        %section
          %img(src='pictures/cards_unpoly_offline_cached.png' height=600)

        %section
          %img(src='pictures/cards_unpoly_offline_toast.png' height=600)

        %section
          %img(src='pictures/cards_unpoly_restored.png' height=600)


        %section
          %h2
            %code a.up-offline

          %p
            This link cannot currently be acccessed due to a loss
            of network connectivity.

          %p
            Previously cached pages will remain accessible while
            the user is offline.
            Cache entries don't expire while offline.

          %p
            This class will be set and removed automatically as
            network connection is lost or regained.

            Links to cached pages will not
            be assigned the <code>.up-offline</code> class.

            %br
            &nbsp;

          %h4 Default style

          %pre.xl
            %code.css(data-noescape)
              :preserve
                a.up-offline {
                  text-decoration: line-through
                }

        %section
          %h3 Connection state notifications

          %pre.xl
            %code.javascript(data-noescape)
              :preserve
                up.on('up:connection:lost', function(event) {
                  $('&lt;div class="toast"&gt;&lt;/div&gt;')
                    .text("Connection lost")
                    .appendTo(document.body)
                })

                up.on('up:connection:restored', function(event) {
                  $('&lt;div class="toast"&gt;&lt;/div&gt;')
                    .text("Connection restored")
                    .appendTo(document.body)
                })

        -#%section
        -#
        -#  %p
        -#    What could maybe be a good default:
        -#
        -#  %ul
        -#    %li When a link or form submission fails, we don't burn down the page
        -#    %li Users can continue to visit recently visited pages while they're offline
        -#    %li Users get a visual distinction whether a link is available or not
        -#
        -#  %p
        -#    How well would this work if we did it like this:
        -#
        -#  %ul
        -#    %li If a request fails, Unpoly goes into offline mode
        -#    %li We have different (much longer) expiration settings for up.proxy when offline
        -#    %li We mark links, forms as .up-offline (or [up-disabled]) if we are offline and the resource is not cached
        -#    %li We don't follow offline links and forms, or maybe throw an up:offline event whose preventable default is to not follow
        -#    %li We need some way to detect connection recovery. This is probably the hardest thing of all. We probably need to periodically fetch the Favicon or something.

        %section
          %img(src='pictures/cards_form.png' height=600)

        %section
          %img(src='pictures/cards_native_offline.png' height=600)

        %section

          %p.red
            It's not cool to lose form data when connection is lost.

          %p
            Can we do better?

        %section
          %img(src='pictures/cards_form.png' height=600)

        %section
          %img(src='pictures/cards_form_unpoly_offline.png' height=600)

        %section
          %img(src='pictures/cards_form_unpoly_offline_navigate.png' height=600)

        %section
          %img(src='pictures/cards_form_unpoly_restored.png' height=600)

        %section
          %h2 Rescuing form data

          %pre.xl
            %code.html(data-noescape)
              :preserve
                &lt;form method='post' action='/documents' <mark>up-rescue</mark>&gt;
                  &lt;input type="text" name="title"&gt;
                  &lt;input type="file" name="document"&gt;
                  &lt;button type="submit"&gt;Submit&lt;/button&gt;
                &lt;/form&gt;

          %pre.xl.fragment
            %code.javascript(data-noescape)
              :preserve
                up.on('up:request:rescued', function(event) {
                  $('&lt;div class="toast"&gt;&lt;/div&gt;')
                    .text("Retry: " + event.request.title)
                    .on('click', event.request.retry)
                    .appendTo(document.body)
                })

        %section
          %h2 Cold acccess when offline

          %p
            What if the page isn't even open when connection is lost?

        %section
          %img(src='pictures/cards_cold_access_native_offline.png' height=600)

        %section

          %p
            By moving the Unpoly cache into a <b>service worker</b> we can make cached pages accessible for new tabs.
          %p.green
            Even when the user is offline and hasn't yet opened her browser.

        %section
          %img(src='pictures/cards_cold_access_unpoly_offline.png' height=600)



        %section
          %h3
            .red
              Why this might not work
            .line
              Offline is hard

          %ul
            %li.fragment
              Devices don't actually know if they're online or not
            %li.fragment
              Being online/offline is not actually a binary state
              .subtle
                Cell switches, moving devices, captive portals, ...
            %li.fragment
              Service worker is on a different thread
            %li.fragment
              Need to cache JavaScript, CSS, images, fonts, ...

          %p.green.fragment
            But let's try!


        %section
          %h2 Vielen Dank!

        %section
          Extra slides


        %section

          %h2
            %code input[up-preview]

          %pre.l
            %code.html(data-noescape)
              :preserve
                &lt;form action="/contracts"&gt;

                  &lt;select name="department" <mark>up-preview="[name=employee]"</mark>&gt;
                    &lt;option&gt;Development&lt;/option&gt;
                    &lt;option&gt;Operations&lt;/option&gt;
                  &lt;/select&gt;

                  &lt;select name="employee"&gt;
                    &lt;option&gt;Judith&lt;/option&gt;
                    &lt;option&gt;Tobias&lt;/option&gt;
                  &lt;/select&gt;

                &lt;/form&gt;

        %section

          %h2
            %code input[up-preview]

          %pre.l
            %code.html(data-noescape)
              :preserve
                &lt;form action="/invoices"&gt;

                  &lt;input name="item_prices[]" <mark>up-preview=".total"</mark> value="20"&gt; €
                  &lt;input name="item_prices[]" <mark>up-preview=".total"</mark> value="20"&gt; €
                  &lt;input name="item_prices[]" <mark>up-preview=".total"</mark> value="60"&gt; €
                  &lt;input name="item_prices[]" <mark>up-preview=".total"</mark> value=""&gt; €

                  &lt;div class="total"&gt;100 €&lt;/div&gt;

                &lt;/form&gt;


    %script{:src => "lib/js/head.min.js"}
    %script{:src => "js/reveal.js"}
    :javascript
      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        transition: 'none', // none/fade/slide/convex/concave/zoom

        // Optional reveal.js plugins
        dependencies: [
          { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'plugin/zoom-js/zoom.js', async: true },
          { src: 'plugin/notes/notes.js', async: true }
        ]
      });
